services:
  app:
    build:
      context: .
      target: dev
    image: "${APP_IMAGE:-sword-app}:latest"
    container_name: "${APP_CONTAINER_NAME:-sword-app}"
    ports:
      - "${APP_PORT_HOST:-8080}:${APP_PORT_CONTAINER:-8080}"
    environment:
      DB_HOST: "${DB_HOST:-mysql}"
      DB_USER: "${DB_USER:-user}"
      DB_PASSWORD: "${DB_PASSWORD:-password}"
      DB_NAME: "${DB_NAME:-tasks_db}"
      MYSQL_PORT_CONTAINER: "3306"
      # Add Air-specific environment variables
      GOFLAGS: "-buildvcs=false"
      AIR_FORCE_POLL: "true"
      AIR_POLL_INTERVAL: "500"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - sword_net
    volumes:
      - .:/app
      - go-mod-cache:/go/pkg/mod
      - build-cache:/app/tmp
    tty: true
    stdin_open: true
    # Add specific Air config
    command: ["air", "-c", ".air.toml"]

  mysql:
    image: mysql:8
    container_name: "${MYSQL_CONTAINER_NAME:-sword_mysql}"
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE:-tasks_db}"
      MYSQL_USER: "${MYSQL_USER:-user}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD:-password}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-your_secure_root_password}"
    ports:
      - "${MYSQL_PORT_HOST:-3307}:${MYSQL_PORT_CONTAINER:-3306}"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sword_net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  mysql_data:
  go-mod-cache:
  build-cache:

networks:
  sword_net: