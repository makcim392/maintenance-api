{{- if .Values.mysql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "maintenance-api.fullname" . }}-mysql
  labels:
    {{- include "maintenance-api.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "maintenance-api.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "maintenance-api.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      containers:
      - name: mysql
        image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}"
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_DATABASE
          value: {{ .Values.database.name | quote }}
        - name: MYSQL_USER
          value: {{ .Values.database.user | quote }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "maintenance-api.fullname" . }}-secrets
              key: dbPassword
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "maintenance-api.fullname" . }}-secrets
              key: mysqlRootPassword
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        resources:
          {{- toYaml .Values.mysql.resources | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
            - -u
            - root
            - -p$(MYSQL_ROOT_PASSWORD)
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
            - -u
            - root
            - -p$(MYSQL_ROOT_PASSWORD)
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: mysql-data
        {{- if .Values.mysql.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "maintenance-api.fullname" . }}-mysql-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "maintenance-api.fullname" . }}-mysql
  labels:
    {{- include "maintenance-api.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  selector:
    {{- include "maintenance-api.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: database
  ports:
  - port: 3306
    targetPort: 3306
    name: mysql
  type: ClusterIP
---
{{- if .Values.mysql.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "maintenance-api.fullname" . }}-mysql-pvc
  labels:
    {{- include "maintenance-api.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.mysql.persistence.size }}
{{- end }}
{{- end }}