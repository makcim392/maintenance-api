services:
  mysql:
    image: mysql:8
    container_name: "${MYSQL_CONTAINER_NAME:-sword_mysql}"
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE:-tasks_db}"
      MYSQL_USER: "${MYSQL_USER:-user}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD:-password}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-root}"
    ports:
      - "${MYSQL_PORT_HOST:-3307}:${MYSQL_PORT_CONTAINER:-3306}"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sword_net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  app:
    image: "${APP_IMAGE:-sword-app}"
    container_name: "${APP_CONTAINER_NAME:-sword-app}"
    ports:
      - "${APP_PORT_HOST:-8080}:${APP_PORT_CONTAINER:-8080}"
    environment:
      DB_HOST: "127.0.0.1"  # Hardcoded for local development
      DB_PORT: "${MYSQL_PORT_HOST:-3307}"
      DB_USER: "${MYSQL_USER:-user}"
      DB_PASSWORD: "${MYSQL_PASSWORD:-password}"
      DB_NAME: "${MYSQL_DATABASE:-tasks_db}"
    networks:
      - sword_net
    depends_on:
      - mysql  # Ensure the app starts after the database

volumes:
  mysql_data:

networks:
  sword_net:
